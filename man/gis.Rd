% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db_gis.R
\name{gis_connection}
\alias{gis_connection}
\alias{import_from_gis}
\title{GISLibrary}
\usage{
gis_connection(
  dbname = "GISLibrary",
  uid = keyring::key_get("councilR.uid"),
  pwd = keyring::key_get("councilR.pwd")
)

import_from_gis(
  query,
  dbname = "GISLibrary",
  uid = keyring::key_get("councilR.uid"),
  pwd = keyring::key_get("councilR.pwd"),
  geometry = TRUE,
  .quiet = FALSE
)
}
\arguments{
\item{dbname}{character, database name. Default is \code{"GISLibrary"}.}

\item{uid}{character, your network ID.
Default is \code{keyring::key_get("councilR.uid")}.}

\item{pwd}{character, your network password.
Default is \code{keyring::key_get("councilR.pwd")}.}

\item{query}{character, string with the database connection and feature class}

\item{geometry}{logical, whether to pull the geometry column, if it exists.
Default value is \code{TRUE}.}

\item{.quiet}{logical, whether to print time elapsed message.}
}
\value{
\code{gis_connection()} - A S4 Microsoft SQL Server object

\code{import_from_gis()} - A \code{\link[sf:sf]{sf::sf()}} object or a data frame
}
\description{
Functions for interacting with GISLibrary, the primary Met Council
ESRI geospatial database.
}
\details{
\itemize{
\item \code{gis_connection()} creates an S4 Microsoft SQL Server object for GISLibrary.
This function will \emph{not} automatically close the connection, so take
care to use \code{\link[DBI:dbDisconnect]{DBI::dbDisconnect()}} once you are done.
\item \code{import_from_gis()} imports a given table from GISLibrary and
converts it into a \code{\link[sf:sf]{sf::sf()}} object. The connection will
be automatically closed after the table is imported. If the table
does not have any spatial data, the table will be returned as a
data.frame.
}

Further examples can be found in \code{vignette("Databases", package = "councilR")}.
}
\examples{
\dontrun{
library(councilR)
library(DBI)
library(sf)

# set credentials if you haven't already
keyring::key_set_with_value("councilR.uid", "mc\\\\myuuid")
keyring::key_set_with_value("councilR.pwd", "password")

# create connection
gis <- gis_connection()

# pull table using SQL and convert to sf
DBI::dbGetQuery(gis, "select *, Shape.STAsText() as wkt from GISLibrary.dbo.COUNTIES where CO_NAME = 'ANOKA'") \%>\%
  st_as_sf(wkt = "wkt", crs = 26915)

# disconnect
DBI::dbDisconnect(gis)

# import a specific table, with no additional SQL logic
import_from_gis(query = "GISLibrary.dbo.COUNTIES", dbname = "GISLibrary")
}

}
\seealso{
Other database functions: 
\code{\link{FRED_connection}()},
\code{\link{FRED_oracle_connection}()},
\code{\link{emissions_connection}()}

Other database functions: 
\code{\link{FRED_connection}()},
\code{\link{FRED_oracle_connection}()},
\code{\link{emissions_connection}()}
}
\concept{database functions}
